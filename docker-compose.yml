version: '3.8'

services:
  postgres:
    image: postgres:14.2
    restart: on-failure
    volumes:
      - ./conf/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    logging:
      driver: "none"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    build:
      context: ./backend
      dockerfile: ./backend.dockerfile
    restart: on-failure
    volumes:
      - ./backend/backend:/backend/
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - postgres

  celery_backend:
    build:
      context: ./backend
      dockerfile: ./celery.dockerfile
    restart: on-failure
    volumes:
      - ./backend/backend:/backend/
    env_file:
      - .env
    depends_on:
      - backend
      - redis

  beat_backend:
    build:
      context: ./backend
      dockerfile: ./beat.dockerfile
    restart: on-failure
    volumes:
      - ./backend/backend:/backend/
    env_file:
      - .env
    depends_on:
      - backend
      - redis

  redis:
    image: redis:7.0.0
    restart: on-failure
    logging:
      driver: none
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 60s
      timeout: 5s
      retries: 5
      start_period: 3s

  flower_backend:
    image: mher/flower
    command: ["celery", "flower", "--url-prefix=flower_backend"]
    restart: always
    environment:
      - DEBUG=1
      - CELERY_BROKER=${CELERY_BROKER_URL}
      - CELERY_BACKEND=${CELERY_RESULT_BACKEND}
      - CELERY_ENABLE_UTC=True
      - FLOWER_BASIC_AUTH=root:fQbxHqbR
    logging:
      driver: "none"
    ports:
      - 5555:5555
    depends_on:
      - celery_backend